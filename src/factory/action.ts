/**
 * action factory
 * アクションファクトリー
 * @namespace action
 */

import { IExtendId } from './autoGenerated';
import OrganizationType from './organizationType';
import PersonType from './personType';

/**
 * アクションへの関係者インターフェース
 * 関係者を表現する最低限のインターフェース
 * 継承先にて、インターフェースが強化される可能性あり
 * @export
 * @interface
 * @memberof action
 */
export interface IParticipant {
    typeOf: OrganizationType | PersonType;
    id: string;
    name: string;
}

/**
 * アクションタイプ
 * @export
 * @enum
 * @memberof action
 */
export enum ActionType {
    PayAction = 'PayAction',
    TakeAction = 'TakeAction'
}

/**
 * アクションステータス
 * @export
 * @enum
 * @memberof action
 */
export enum ActionStatusType {
    ActiveActionStatus = 'ActiveActionStatus',
    CompletedActionStatus = 'CompletedActionStatus',
    FailedActionStatus = 'FailedActionStatus',
    PotentialActionStatus = 'PotentialActionStatus',
    CanceledActionStatus = 'CanceledActionStatus'
}

/**
 * アクション属性
 * @export
 * @interface
 * @memberof action
 */
export interface IAttributes {
    typeOf: ActionType;
    actionStatus: ActionStatusType;
    agent?: IParticipant;
    recipient?: IParticipant;
    result?: any;
    error?: any;
    object?: any;
    startDate?: Date;
    endDate?: Date;
}

export type IAction = IExtendId<IAttributes>;
