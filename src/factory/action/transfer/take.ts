/**
 * 受取アクションファクトリー
 * @namespace action.transfer.take
 */

import { ActionStatusType, ActionType, IParticipant } from '../../action';
import { IExtendId } from '../../autoGenerated';
import { IClientUser } from '../../clientUser';
import * as TransferActionFactory from '../transfer';

export type IAgent = IParticipant;
export type IRecipient = IParticipant;

export interface IObject {
    transactionId: string;
    clientUser: IClientUser;
    price: number;
    accountId: string;
    notes: string;
}
export interface IResult {
    price: number;
}

export interface IAttributes extends TransferActionFactory.IAttributes {
    recipient: IRecipient;
    result?: IResult;
    object: IObject;
}

export type IAction = IExtendId<IAttributes>;

export function createAttributes(params: {
    actionStatus: ActionStatusType;
    result?: IResult;
    object: IObject;
    agent: IAgent;
    recipient: IRecipient;
    startDate: Date;
    endDate?: Date;
}): IAttributes {
    return {
        actionStatus: params.actionStatus,
        typeOf: ActionType.TakeAction,
        result: params.result,
        object: params.object,
        agent: params.agent,
        recipient: params.recipient,
        startDate: params.startDate,
        endDate: params.endDate
    };
}
